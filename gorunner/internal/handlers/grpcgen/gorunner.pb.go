// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: gorunner.proto

package grpcgen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's code
type RunCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	EnvVars        map[string]string `protobuf:"bytes,2,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TimeoutSeconds uint32            `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
}

func (x *RunCodeRequest) Reset() {
	*x = RunCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorunner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCodeRequest) ProtoMessage() {}

func (x *RunCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gorunner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCodeRequest.ProtoReflect.Descriptor instead.
func (*RunCodeRequest) Descriptor() ([]byte, []int) {
	return file_gorunner_proto_rawDescGZIP(), []int{0}
}

func (x *RunCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RunCodeRequest) GetEnvVars() map[string]string {
	if x != nil {
		return x.EnvVars
	}
	return nil
}

func (x *RunCodeRequest) GetTimeoutSeconds() uint32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

// The response message containing either a success or error result
type RunCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*RunCodeResponse_Success
	//	*RunCodeResponse_Error
	Result          isRunCodeResponse_Result `protobuf_oneof:"result"`
	ExecutionTimeMs uint64                   `protobuf:"varint,3,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	BuildTimeMs     uint64                   `protobuf:"varint,4,opt,name=build_time_ms,json=buildTimeMs,proto3" json:"build_time_ms,omitempty"`
}

func (x *RunCodeResponse) Reset() {
	*x = RunCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorunner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunCodeResponse) ProtoMessage() {}

func (x *RunCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gorunner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunCodeResponse.ProtoReflect.Descriptor instead.
func (*RunCodeResponse) Descriptor() ([]byte, []int) {
	return file_gorunner_proto_rawDescGZIP(), []int{1}
}

func (m *RunCodeResponse) GetResult() isRunCodeResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *RunCodeResponse) GetSuccess() *SuccessResponse {
	if x, ok := x.GetResult().(*RunCodeResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *RunCodeResponse) GetError() *ErrorResponse {
	if x, ok := x.GetResult().(*RunCodeResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *RunCodeResponse) GetExecutionTimeMs() uint64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *RunCodeResponse) GetBuildTimeMs() uint64 {
	if x != nil {
		return x.BuildTimeMs
	}
	return 0
}

type isRunCodeResponse_Result interface {
	isRunCodeResponse_Result()
}

type RunCodeResponse_Success struct {
	Success *SuccessResponse `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type RunCodeResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*RunCodeResponse_Success) isRunCodeResponse_Result() {}

func (*RunCodeResponse_Error) isRunCodeResponse_Result() {}

// The success response containing the output of the code execution
type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout string `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr string `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorunner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gorunner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_gorunner_proto_rawDescGZIP(), []int{2}
}

func (x *SuccessResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *SuccessResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

// The error response containing the error details
type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorunner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gorunner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_gorunner_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_gorunner_proto protoreflect.FileDescriptor

var file_gorunner_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x6f, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc2, 0x01, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x76, 0x5f, 0x76,
	0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x52, 0x75, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x56, 0x61,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x6e, 0x76,
	0x56, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x22, 0x46, 0x0a, 0x0d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0x3a, 0x0a, 0x08, 0x47, 0x6f, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x2e, 0x52, 0x75,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x52,
	0x75, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gorunner_proto_rawDescOnce sync.Once
	file_gorunner_proto_rawDescData = file_gorunner_proto_rawDesc
)

func file_gorunner_proto_rawDescGZIP() []byte {
	file_gorunner_proto_rawDescOnce.Do(func() {
		file_gorunner_proto_rawDescData = protoimpl.X.CompressGZIP(file_gorunner_proto_rawDescData)
	})
	return file_gorunner_proto_rawDescData
}

var file_gorunner_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_gorunner_proto_goTypes = []any{
	(*RunCodeRequest)(nil),  // 0: RunCodeRequest
	(*RunCodeResponse)(nil), // 1: RunCodeResponse
	(*SuccessResponse)(nil), // 2: SuccessResponse
	(*ErrorResponse)(nil),   // 3: ErrorResponse
	nil,                     // 4: RunCodeRequest.EnvVarsEntry
}
var file_gorunner_proto_depIdxs = []int32{
	4, // 0: RunCodeRequest.env_vars:type_name -> RunCodeRequest.EnvVarsEntry
	2, // 1: RunCodeResponse.success:type_name -> SuccessResponse
	3, // 2: RunCodeResponse.error:type_name -> ErrorResponse
	0, // 3: GoRunner.RunCode:input_type -> RunCodeRequest
	1, // 4: GoRunner.RunCode:output_type -> RunCodeResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gorunner_proto_init() }
func file_gorunner_proto_init() {
	if File_gorunner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gorunner_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RunCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorunner_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RunCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorunner_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorunner_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gorunner_proto_msgTypes[1].OneofWrappers = []any{
		(*RunCodeResponse_Success)(nil),
		(*RunCodeResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gorunner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gorunner_proto_goTypes,
		DependencyIndexes: file_gorunner_proto_depIdxs,
		MessageInfos:      file_gorunner_proto_msgTypes,
	}.Build()
	File_gorunner_proto = out.File
	file_gorunner_proto_rawDesc = nil
	file_gorunner_proto_goTypes = nil
	file_gorunner_proto_depIdxs = nil
}
